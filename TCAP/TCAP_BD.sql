USE TCAP

CREATE TABLE ROLES(
	ID_ROL INT IDENTITY(1,1) PRIMARY KEY,
	NAME_ROL NVARCHAR(25) NOT NULL
);
INSERT INTO ROLES VALUES ('CLIENT')
INSERT INTO ROLES VALUES ('PLAYER')

CREATE TABLE STATUSES(
	ID_STATUS INT IDENTITY(1,1) PRIMARY KEY,
	NAME_STATUS NVARCHAR(25) NOT NULL
);

INSERT INTO STATUSES VALUES ('INACTIVE')
INSERT INTO STATUSES VALUES ('ACTIVATE')
INSERT INTO STATUSES VALUES ('CLOSE')
INSERT INTO STATUSES VALUES ('OPEN')
INSERT INTO STATUSES VALUES ('IN PROGRESS')
INSERT INTO STATUSES VALUES ('TIMEOUT')

CREATE TABLE USERS(
	ID_USER INT IDENTITY(1,1) PRIMARY KEY,
	ID_ROL INT NOT NULL,
	NAME_USER NVARCHAR(45) NOT NULL,
	SURNAME_USER NVARCHAR(45) NOT NULL,
	EMAIL_USER NVARCHAR(255) NOT NULL,
	PASSWORD_USER TEXT NOT NULL,
	IMAGE_USER TEXT NULL,
	CREATED_USER DATETIME NOT NULL,
	UPDATED_USER DATETIME NOT NULL,
	STATUS_USER INT NOT NULL DEFAULT 1,
	FOREIGN KEY (ID_ROL) REFERENCES ROLES(ID_ROL),
	FOREIGN KEY (STATUS_USER) REFERENCES STATUSES(ID_STATUS)
);

CREATE TABLE PLAYERS(
	ID_PLAYER INT IDENTITY(1,1) PRIMARY KEY,
	ID_USER INT NOT NULL,
	NICK_PLAYER NVARCHAR(45) NOT NULL,
	AGE_PLAYER INT NULL,
	SEX_PLAYER NVARCHAR(1) NULL CHECK (SEX_PLAYER IN('M','F')),
	DESCRIPTION_PLAYER NVARCHAR(255) NULL,
	PP_PLAYER INT NOT NULL DEFAULT 0,
	NP_PLAYER INT NOT NULL DEFAULT 0,
	SEALS_PLAYER INT NOT NULL DEFAULT 0,
	LEVEL_PLAYER INT NOT NULL DEFAULT 1,
	FOREIGN KEY (ID_USER) REFERENCES USERS(ID_USER)
);

CREATE TABLE CLIENTS(
	ID_CLIENT INT IDENTITY(1,1) PRIMARY KEY,
	ID_USER INT NOT NULL,
	DNI_CLIENT NVARCHAR(45)NOT NULL,
	MOBILE_CLIENT NVARCHAR(45)NOT NULL,
	TELEPHONE_CLIENT NVARCHAR(45)NULL,
	FOREIGN KEY (ID_USER) REFERENCES USERS(ID_USER)
);

CREATE TABLE TOKENS(
	ID_TOKEN INT IDENTITY(1,1) NOT NULL PRIMARY KEY,
	ID_USER INT NOT NULL,
	VALUE_TOKEN TEXT NOT NULL,
	START_TOKEN DATETIME NOT NULL,
	END_TOKEN DATETIME NOT NULL,
	FOREIGN KEY (ID_USER) REFERENCES USERS(ID_USER)
);

GO

CREATE TABLE PUBS(
	ID_PUB INT IDENTITY(1,1) NOT NULL PRIMARY KEY,
	ID_CLIENT INT NOT NULL,
	NAME_PUB NVARCHAR(45) NOT NULL,
	ADDRESS_PUB NVARCHAR(255) NOT NULL,
	CP_PUB NVARCHAR(45) NOT NULL,
	PHONE_PUB NVARCHAR(45) NOT NULL,
	STATUS_PUB INT NOT NULL,
	FOREIGN KEY(ID_CLIENT) REFERENCES CLIENTS(ID_CLIENT),
	FOREIGN KEY(STATUS_PUB) REFERENCES STATUSES(ID_STATUS)
);

CREATE TABLE TICKETS(
	ID_TICKET INT IDENTITY(1,1) NOT NULL PRIMARY KEY,
	ID_PLAYER INT NOT NULL,
	ID_PUB INT NOT NULL,
	CREATED_TICKET DATETIME NOT NULL,
	QUANTITY_TICKET DECIMAL NOT NULL,
	FOREIGN KEY(ID_PLAYER) REFERENCES PLAYERS(ID_PLAYER),
	FOREIGN KEY(ID_PUB) REFERENCES PUBS(ID_PUB)
);

CREATE TABLE PARTIES(
	ID_PARTY INT IDENTITY(1,1) NOT NULL PRIMARY KEY,
	ID_PUB INT NOT NULL,
	BOARDGAME_PARTY NVARCHAR(255) NOT NULL,
	START_PARTY DATETIME NOT NULL,
	CURRENT_PARTICIPANT_PARTY INT NOT NULL,
	MAX_PARTICIPANT_PARTY INT NOT NULL,
	STATUS_PARTY INT NOT NULL,
	FOREIGN KEY(ID_PUB) REFERENCES PUBS(ID_PUB),
	FOREIGN KEY(STATUS_PARTY) REFERENCES STATUSES(ID_STATUS)
);

CREATE TABLE PARTICPANTS(
	ID_PARTICPANT INT IDENTITY(1,1) NOT NULL PRIMARY KEY,
	ID_PARTY INT NOT NULL,
	ID_PLAYER INT NOT NULL,
	LEADER_PARTICIPANT BIT NOT NULL DEFAULT 0,
	FOREIGN KEY(ID_PARTY) REFERENCES PARTIES(ID_PARTY),
	FOREIGN KEY(ID_PLAYER) REFERENCES PLAYERS(ID_PLAYER)

);

CREATE TRIGGER COUNT_PARTICIPANTS_PARTY
ON PARTICPANTS AFTER INSERT 
AS
	DECLARE @ID_PARTY  INT 
	SELECT @ID_PARTY= ID_PARTY FROM inserted

	UPDATE PARTIES SET CURRENT_PARTICIPANT_PARTY += 1
	WHERE ID_PARTY = @ID_PARTY 

	DECLARE @CURRENT_PARTICIPANT INT 
	SELECT @CURRENT_PARTICIPANT = CURRENT_PARTICIPANT_PARTY FROM  PARTIES 
	WHERE  PARTIES.ID_PARTY = @ID_PARTY 

	DECLARE @MAX INT 
	SELECT @MAX = MAX_PARTICIPANT_PARTY FROM PARTIES
	WHERE ID_PARTY = @ID_PARTY

	IF(@CURRENT_PARTICIPANT = @MAX)
	BEGIN
		 UPDATE PARTIES SET STATUS_PARTY = 3 WHERE
		 ID_PARTY = @ID_PARTY
	END
GO

delete from TOKENS
delete from players
delete from clients
delete from users

select * from users
select * from tokens
select * from players
select * from clients