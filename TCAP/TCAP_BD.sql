USE TCAP

CREATE TABLE ROLES(
	ID_ROL INT IDENTITY(1,1) PRIMARY KEY,
	NAME_ROL NVARCHAR(25) NOT NULL
);
INSERT INTO ROLES VALUES ('CLIENT')
INSERT INTO ROLES VALUES ('PLAYER')

CREATE TABLE STATUSES(
	ID_STATUS INT IDENTITY(1,1) PRIMARY KEY,
	NAME_STATUS NVARCHAR(25) NOT NULL
);

INSERT INTO STATUSES VALUES ('INACTIVE')
INSERT INTO STATUSES VALUES ('ACTIVATE')

CREATE TABLE USERS(
	ID_USER INT IDENTITY(1,1) PRIMARY KEY,
	ID_ROL INT NOT NULL,
	NAME_USER NVARCHAR(45) NOT NULL,
	SURNAME_USER NVARCHAR(45) NOT NULL,
	EMAIL_USER NVARCHAR(255) NOT NULL,
	PASSWORD_USER TEXT NOT NULL,
	IMAGE_USER TEXT NULL,
	CREATED_USER DATETIME NOT NULL,
	UPDATED_USER DATETIME NOT NULL,
	STATUS_USER INT NOT NULL DEFAULT 0,
	FOREIGN KEY (ID_ROL) REFERENCES ROLES(ID_ROL),
	FOREIGN KEY (STATUS_USER) REFERENCES STATUSES(ID_STATUS)
);

CREATE TABLE PLAYERS(
	ID_PLAYER INT IDENTITY(1,1) PRIMARY KEY,
	ID_USER INT NOT NULL,
	NICK_PLAYER NVARCHAR(45) NOT NULL,
	AGE_PLAYER INT NULL,
	SEX_PLAYER NVARCHAR(1) NULL CHECK (SEX_PLAYER IN('M','F')),
	DESCRIPTION_PLAYER NVARCHAR(255) NULL,
	PP_PLAYER INT NOT NULL DEFAULT 0,
	NP_PLAYER INT NOT NULL DEFAULT 0,
	SEALS_PLAYER INT NOT NULL DEFAULT 0,
	LEVEL_PLAYER INT NOT NULL DEFAULT 1,
	FOREIGN KEY (ID_USER) REFERENCES USERS(ID_USER)
);

CREATE TABLE CLIENTS(
	ID_CLIENT INT IDENTITY(1,1) PRIMARY KEY,
	ID_USER INT NOT NULL,
	DNI_CLIENT NVARCHAR(45)NOT NULL,
	MOBILE_CLIENT NVARCHAR(45)NOT NULL,
	TELEPHONE_CLIENT NVARCHAR(45)NULL,
	FOREIGN KEY (ID_USER) REFERENCES USERS(ID_USER)
);

CREATE TABLE TOKENS(
	ID_TOKEN INT IDENTITY(1,1) NOT NULL PRIMARY KEY,
	ID_USER INT NOT NULL,
	VALUE_TOKEN TEXT NOT NULL,
	START_TOKEN DATETIME NOT NULL,
	END_TOKEN DATETIME NOT NULL,
	FOREIGN KEY (ID_USER) REFERENCES USERS(ID_USER)
);

GO

CREATE TABLE PUBS(
	ID_PUB INT IDENTITY(1,1) NOT NULL PRIMARY KEY,
	ID_CLIENT INT NOT NULL,
	NAME_PUB NVARCHAR(45) NOT NULL,
	ADDRESS_PUB NVARCHAR(255) NOT NULL,
	CP_PUB NVARCHAR(45) NOT NULL,
	PHONE_PUB NVARCHAR(45) NOT NULL,
	STATUS_PUB NVARCHAR(25) NOT NULL,
	FOREIGN KEY(ID_CLIENT) REFERENCES CLIENTS(ID_CLIENT)
);

CREATE TABLE TICKETS(
	ID_TICKET INT IDENTITY(1,1) NOT NULL PRIMARY KEY,
	ID_PLAYER INT NOT NULL,
	ID_PUB INT NOT NULL,
	CREATED_TICKET DATETIME NOT NULL,
	QUANTITY_TICKET DECIMAL NOT NULL,
	FOREIGN KEY(ID_PLAYER) REFERENCES PLAYERS(ID_PLAYER),
	FOREIGN KEY(ID_PUB) REFERENCES PUBS(ID_PUB)
);

CREATE TABLE PARTIES(
	ID_PARTY INT IDENTITY(1,1) NOT NULL PRIMARY KEY,
	ID_PUB INT NOT NULL,
	BOARDGAME_PARTY NVARCHAR(255) NOT NULL,
	START_PARTY DATETIME NOT NULL,
	CURRENT_PARTICIPANT_PARTY INT NOT NULL,
	MAX_PARTICIPANT_PARTY INT NOT NULL,
	FOREIGN KEY(ID_PUB) REFERENCES PUBS(ID_PUB)
);

CREATE TABLE PARTICPANTS(
	ID_PARTICPANT INT IDENTITY(1,1) NOT NULL PRIMARY KEY,
	ID_PARTY INT NOT NULL,
	ID_PLAYER INT NOT NULL,
	LEADER_PARTICIPANT BIT NOT NULL DEFAULT 0,
	FOREIGN KEY(ID_PARTY) REFERENCES PARTIES(ID_PARTY),
	FOREIGN KEY(ID_PLAYER) REFERENCES PLAYERS(ID_PLAYER)

);


/*
ALTER PROCEDURE CONFIRM(@T TEXT,@ERROR NVARCHAR(255) = NULL OUTPUT)
AS
	DECLARE @ID INT
	DECLARE @DATE DATETIME
	DECLARE @X INT
	SELECT @X = COUNT(ID_USER) FROM TOKENS
	WHERE VALUE_TOKEN LIKE @T
	IF(@X != 0)
		BEGIN
			SELECT @ID = ID_USER,@DATE = END_TOKEN FROM TOKENS
			WHERE VALUE_TOKEN LIKE @T
			IF(@DATE > CURRENT_TIMESTAMP)
				BEGIN
					SELECT ID_USER FROM USERS 
					WHERE ID_USER = @ID
					AND STATUS_USER = 1
				END
			ELSE
				BEGIN
					SELECT @ERROR = 'El enlace esta caducado.'
				END
		END
	ELSE
		BEGIN
			SELECT @ERROR = 'El enlace no existe.' 
		END
	
GO

ALTER PROCEDURE REGISTER(@ROL INT,@N NVARCHAR(45),@S NVARCHAR(45),@E NVARCHAR(255),@P TEXT,@C NVARCHAR(45),@CP NVARCHAR(45),@T TEXT,@ERROR NVARCHAR(255) = NULL OUTPUT)
AS
	DECLARE @COUNT INT
	SELECT  @COUNT = COUNT(EMAIL_USER) FROM USERS
	WHERE EMAIL_USER = @E
	IF(@COUNT = 0)
		BEGIN
			DECLARE @ID INT 
			INSERT INTO USERS VALUES(@ROL,@N,@S,@E,@P,
			NULL,@C,@CP,CURRENT_TIMESTAMP,CURRENT_TIMESTAMP,1)
			SELECT @ID = SCOPE_IDENTITY() FROM USERS
			INSERT INTO TOKENS VALUES(@ID,@T,CURRENT_TIMESTAMP,DATEADD(MINUTE,15,CURRENT_TIMESTAMP))

		END
	ELSE
		BEGIN
			SELECT @ERROR = 'El email ya existe.'
		END
GO

ALTER PROCEDURE LOGON(@E NVARCHAR(255),@P TEXT)
AS
	SELECT ID_ROL,NAME_USER,PASSWORD_USER,SURNAME_USER,EMAIL_USER FROM USERS 
	WHERE EMAIL_USER = @E
	AND STATUS_USER = 2
GO

GO
CREATE TRIGGER ADD_PLAYER_OR_CLIENT ON USERS 
AFTER INSERT  
AS
	DECLARE @ROL INT
	DECLARE @ID INT
	SELECT @ID = ID_USER,@ROL = ID_ROL FROM INSERTED
	IF( @ROL = 1 )
		BEGIN
			INSERT INTO CLIENTS VALUES(@ID,NULL,NULL,NULL,NULL)
		END
	ELSE
		BEGIN
			INSERT INTO PLAYERS VALUES(@ID,NULL,NULL,NULL,NULL,0,0,0,1)
		END
GO

select * from tokens where VALUE_TOKEN like '$2a$12$93Qp.FAIjQDAsrNE1x7DTuJ6geh3bH4UOXb2ml1ycDe5DHt2rzMOu'
EXEC CONFIRM '$2a$12$93Qp.FAIjQDAsrNE1x7DTuJgeh3bH4UOXb2ml1ycDe5DHt2rzMOu'
SELECT * FROM TOKENS
UPDATE TOKENS SET END_TOKEN = DATEADD(MINUTE,15,CURRENT_TIMESTAMP)
*/