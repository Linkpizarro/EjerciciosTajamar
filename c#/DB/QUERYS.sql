USE HOSPITAL;
--################################### CONSULTAS 1 ###########################################--
--EJ1
SELECT * FROM EMP;
--EJ2
SELECT APELLIDO,OFICIO,SALARIO * 12 AS SALARIO_ANUAL,
SALARIO * 14 AS SALARIO_CON_EXTRAS,
(SALARIO + COMISION) * 14 AS SALARIO_CON_EXTRAS_Y_COMISIONES FROM EMP
WHERE COMISION > 100000;
--EJ3
SELECT APELLIDO,OFICIO,SALARIO * 12 AS SALARIO_ANUAL,
SALARIO * 14 AS SALARIO_CON_EXTRAS,
(SALARIO + COMISION) * 14 AS SALARIO_CON_EXTRAS_Y_COMISIONES FROM EMP
WHERE SALARIO * 14 > 2200000;
--EJ4
SELECT APELLIDO,OFICIO,SALARIO * 12 AS SALARIO_ANUAL,
SALARIO * 14 AS SALARIO_CON_EXTRAS,
(SALARIO + COMISION) * 14 AS SALARIO_CON_EXTRAS_Y_COMISIONES FROM EMP
WHERE (SALARIO+COMISION)*14 > 3000000;
--EJ5
SELECT * FROM EMP 
ORDER BY DEPT_NO,OFICIO;
--EJ6
SELECT * FROM SALA 
WHERE HOSPITAL_COD = 45;
--EJ7
SELECT * FROM ENFERMO  
WHERE FECHA_NAC < CAST('1970-01-01' AS DATE);
--EJ8
SELECT * FROM ENFERMO  
WHERE FECHA_NAC < CAST('1970-01-01' AS DATE) 
ORDER BY INSCRIPCION DESC;
--EJ9
SELECT * FROM PLANTILLA 
WHERE T LIKE 'M';
--EJ10
SELECT * FROM PLANTILLA 
WHERE T LIKE 'N';
--EJ11
SELECT * FROM PLANTILLA 
WHERE T LIKE 'M' AND SALARIO BETWEEN 200000 AND 225000;
--EJ12
SELECT * FROM EMP 
WHERE FECHA_ALT NOT BETWEEN CAST('1980-01-01' AS DATE) 
AND CAST('1982-12-12' AS DATE);
--EJ13
SELECT DNOMBRE FROM DEPT 
WHERE LOC LIKE 'MADRID' 
OR LOC LIKE 'BARCELONA';

--##################################### CONSULTAS 2 ##########################################--
--EJ1
SELECT * FROM EMP 
WHERE FECHA_ALT > CAST('1985-06-01' AS DATE);
--EJ2
SELECT * FROM EMP 
WHERE FECHA_ALT > CAST('1985-06-01' AS DATE) 
AND SALARIO BETWEEN 150000 AND 400000;
--EJ3
SELECT * FROM EMP 
WHERE FECHA_ALT > CAST('1985-06-01' AS DATE) 
AND SALARIO BETWEEN 150000 
AND 400000 
AND OFICIO NOT LIKE 'ANALISTA' 
AND DEPT_NO = 20;
--EJ4
SELECT * FROM EMP 
WHERE APELLIDO LIKE '%Z' 
ORDER BY DEPT_NO,FECHA_ALT DESC;
--EJ5 
SELECT * FROM EMP 
WHERE APELLIDO LIKE '%Z' AND SALARIO > 200000 
ORDER BY DEPT_NO,FECHA_ALT DESC;
--EJ6
SELECT * FROM EMP 
WHERE OFICIO NOT LIKE 'ANALISTA';
--EJ7
SELECT * FROM EMP 
WHERE OFICIO NOT LIKE 'ANALISTA' ORDER BY SALARIO DESC;
--EJ8
SELECT * FROM EMP 
WHERE OFICIO NOT LIKE 'ANALISTA' 
AND EMP_NO NOT BETWEEN 7600 AND 7900 
ORDER BY SALARIO DESC;

--################################## CONSULTAS 3 #############################--
--EJ1
SELECT DISTINCT OFICIO FROM EMP;
--EJ2
SELECT DISTINCT NOMBRE FROM SALA;
--EJ3
SELECT * FROM PLANTILLA 
WHERE FUNCION NOT LIKE 'INTERINO' 
ORDER BY HOSPITAL_COD,SALA_COD;
--EJ4
SELECT DISTINCT APELLIDO,DEPT_NO FROM EMP;
--EJ5
SELECT DISTINCT S FROM ENFERMO;
--EJ6
SELECT * FROM PLANTILLA 
ORDER BY T,APELLIDO;
--EJ7
SELECT DISTINCT ESPECIALIDAD FROM DOCTOR 
ORDER BY ESPECIALIDAD;

--AGRUPACION--
--EJ4
SELECT COUNT(*) AS NºPERSONAS,OFICIO,DEPT_NO FROM EMP 
GROUP BY OFICIO,DEPT_NO; 
--EJ5
SELECT * FROM DEPT WHERE DEPT_NO IN (SELECT DEPT_NO FROM EMP 
GROUP BY DEPT_NO
HAVING COUNT(*)>=4);
--EJ7
SELECT COUNT(EMPLEADO_NO) AS PERSONAS, FUNCION FROM PLANTILLA 
GROUP BY FUNCION 
HAVING FUNCION IN ('ENFERMERO','ENFERMERA','INTERINO') 
ORDER BY FUNCION;
--EJ9
SELECT OFICIO,COUNT(EMP_NO) AS EMPLEADOS ,
MIN(SALARIO) AS SALARIOMINIMO,
MAX(SALARIO) AS SALARIOMAXIMO,
MAX(SALARIO) - MIN(SALARIO) AS DIFERENCIA,
AVG(SALARIO) AS MEDIA FROM EMP 
GROUP BY OFICIO;
--EJ10
SELECT NOMBRE,AVG(CAST(NUM_CAMA AS INT)) AS VALOR_MEDIO_CAMA FROM SALA 
GROUP BY NOMBRE,SALA_COD;
--EJ14
SELECT SUM(CAST(SALARIO AS INT)) AS SALARIO_TOTAL,FUNCION,T FROM PLANTILLA 
GROUP BY FUNCION,T 
ORDER BY FUNCION;

--CONTAR EL NÚMERO DE EMPLEADOS QUE HAY POR CADA DEPARTAMENTO, MOSTRANDO EL NOMBRE DE DEPARTAMENTO--
SELECT COUNT(EMP.DEPT_NO) AS EMPLEADOS ,DEPT.DNOMBRE FROM EMP 
RIGHT JOIN DEPT 
ON EMP.DEPT_NO = DEPT.DEPT_NO 
GROUP BY DEPT.DNOMBRE 
ORDER BY EMPLEADOS DESC;

--##################################### CONSULTAS 4 ############################################--
--EJ1
SELECT EMP.APELLIDO,EMP.OFICIO,EMP.SALARIO,DEPT.DEPT_NO,DEPT.DNOMBRE FROM EMP 
INNER JOIN DEPT 
ON DEPT.DEPT_NO = EMP.DEPT_NO 
WHERE SALARIO > 300000;
--EJ2
SELECT HOSPITAL.NOMBRE AS NOMBRE_HOSPITAL,SALA.NOMBRE AS NOMBRE_SALA FROM HOSPITAL 
INNER JOIN SALA 
ON SALA.HOSPITAL_COD = HOSPITAL.HOSPITAL_COD;
--EJ3
SELECT COUNT(EMP.EMP_NO) AS NºTRABAJADORES,DEPT.LOC FROM EMP 
RIGHT JOIN DEPT 
ON DEPT.DEPT_NO = EMP.DEPT_NO 
GROUP BY DEPT.LOC; 
--EJ4
SELECT DEPT.DNOMBRE,COUNT(EMP.EMP_NO) AS NºPERSONAS,EMP.OFICIO FROM EMP 
RIGHT JOIN DEPT 
ON DEPT.DEPT_NO = EMP.DEPT_NO 
GROUP BY DEPT.DNOMBRE,DEPT.DEPT_NO,EMP.OFICIO 
ORDER BY DEPT.DEPT_NO DESC;
--EJ5
SELECT COUNT(SALA.SALA_COD) AS NºSALAS,SALA.NOMBRE AS SALA,HOSPITAL.NOMBRE AS HOSPITAL FROM SALA 
INNER JOIN HOSPITAL 
ON HOSPITAL.HOSPITAL_COD = SALA.HOSPITAL_COD 
GROUP BY HOSPITAL.NOMBRE,SALA.NOMBRE;
--EJ6
SELECT DEPT.LOC,COUNT(EMP.EMP_NO) FROM EMP 
INNER JOIN DEPT 
ON DEPT.DEPT_NO = EMP.DEPT_NO 
GROUP BY DEPT.LOC 
HAVING COUNT(EMP.EMP_NO) >= 4;
--EJ7
SELECT AVG(CAST(NUM_CAMA AS INT)) AS MEDIA_CAMA,NOMBRE,SALA_COD FROM SALA 
GROUP BY NOMBRE,SALA_COD;
--EJ8
SELECT APELLIDO,HOSPITAL.NOMBRE AS HOSPITAL,DIRECCION,TELEFONO FROM DOCTOR 
INNER JOIN HOSPITAL 
ON HOSPITAL.HOSPITAL_COD = DOCTOR.HOSPITAL_COD 
ORDER BY HOSPITAL.NOMBRE;
--EJ9
SELECT PLANTILLA.APELLIDO,SALA.NOMBRE AS SALA,HOSPITAL.NOMBRE AS HOSPITAL,
SUM(SALA.NUM_CAMA - OCUPACION.CAMA) AS NºCAMAS 
FROM SALA
INNER JOIN HOSPITAL 
ON HOSPITAL.HOSPITAL_COD = SALA.HOSPITAL_COD
INNER JOIN PLANTILLA 
ON PLANTILLA.HOSPITAL_COD = SALA.HOSPITAL_COD
INNER JOIN OCUPACION 
ON SALA.SALA_COD = OCUPACION.SALA_COD
GROUP BY PLANTILLA.APELLIDO,SALA.NOMBRE,HOSPITAL.NOMBRE
ORDER BY NºCAMAS DESC;
--EJ10
SELECT HOSPITAL.NOMBRE,SALA.NOMBRE FROM HOSPITAL 
CROSS JOIN SALA;

--################################### CONSULTAS UNION #########################################--
--EJ1
SELECT APELLIDO, HOSPITAL_COD AS CODIGO,
FUNCION AS TABAJO,'PLANTILLA' AS TABLA
FROM PLANTILLA
WHERE HOSPITAL_COD = 22
UNION
SELECT APELLIDO,HOSPITAL_COD AS CODIGO,ESPECIALIDAD,'DOCTOR' FROM DOCTOR
WHERE HOSPITAL_COD = 22;
--EJ2
SELECT * FROM
(SELECT APELLIDO,OFICIO AS TRABAJO,SALARIO AS SUELDO FROM EMP
UNION 
SELECT APELLIDO,ESPECIALIDAD AS TRABAJO,SALARIO AS SUELDO FROM DOCTOR
UNION 
SELECT APELLIDO,FUNCION AS TRABAJO,SALARIO AS SUELDO FROM PLANTILLA) TABAJADORES
WHERE SUELDO > 300000;

--#################################SUBCIBSULTAS################################################--
--EJ1
SELECT EMP_NO,APELLIDO,FECHA_ALT FROM EMP 
WHERE FECHA_ALT = (SELECT MIN(FECHA_ALT) FROM EMP);
--EJ2
SELECT EMP_NO,APELLIDO,FECHA_ALT FROM EMP 
WHERE FECHA_ALT = (SELECT MAX(FECHA_ALT) FROM EMP);
--EJ3
select Apellido, Oficio from emp 
where oficio = (select oficio from emp 
		        where apellido = 'JIMENEZ');
--EJ4
SELECT * FROM EMP 
WHERE SALARIO > (SELECT MAX(SALARIO) FROM EMP
				 WHERE DEPT_NO = 30);
--EJ5
SELECT APELLIDO,FUNCION,SALA_COD FROM PLANTILLA;
--EJ6
select Apellido, Salario from emp
union
select Apellido, Salario from plantilla
order by 2 desc;
--EJ7
SELECT APELLIDO,OFICIO FROM EMP
WHERE DEPT_NO = 20 
AND OFICIO IN (SELECT OFICIO FROM EMP 
              WHERE DEPT_NO IN (SELECT DEPT_NO FROM DEPT 
						       WHERE DNOMBRE LIKE 'VENTAS'));
--EJ8
Select * from emp where salario > 
(select avg (salario) from emp where oficio = 'DIRECTOR')  
and oficio <> 'PRESIDENTE';
--EJ9
SELECT APELLIDO,FUNCION,SALARIO,HOSPITAL_COD FROM PLANTILLA
WHERE FUNCION IN ('ENFERMERO','ENFERMERA')
AND HOSPITAL_COD = (SELECT HOSPITAL_COD FROM HOSPITAL
					WHERE NOMBRE LIKE 'SAN CARLOS');
--EJ10
Select * from hospital where hospital_cod in (select hospital_cod from doctor 
											  where especialidad = 'Cardiología');
--EJ11
Select Apellido, Funcion, salario * 12 as [SALARIO ANUAL] from plantilla 
where hospital_cod in (select hospital_cod from hospital 
					   where nombre = 'PROVINCIAL' or nombre= 'GENERAL');
--EJ12
Select apellido from enfermo 
where Fecha_nac < (select fecha_nac from enfermo 
				   where apellido = 'MILLER B. ');

--######################################## CONSLTAS DE ACCIÓN ##################################################################--
--EJ1
INSERT INTO DEPT VALUES((SELECT MAX(DEPT_NO) + 10 FROM DEPT),'INFORMATICA','MADRID');
INSERT INTO EMP VALUES((SELECT MAX(EMP_NO)+1 FROM EMP),'ESCRICHE','INFORMATICO',7911,CURRENT_TIMESTAMP,70000,0,50);
SELECT * FROM EMP;
--EJ2
INSERT INTO DEPT VALUES((SELECT MAX(DEPT_NO) + 10 FROM DEPT),'RECURSOS HUMANOS','ALICANTE'),
((SELECT MAX(DEPT_NO) + 20 FROM DEPT),'INFORMATICA','SORIA');
SELECT * FROM DEPT;
--EJ3
UPDATE DEPT SET LOC = 'TERUEL' WHERE DNOMBRE LIKE 'VENTAS';
SELECT * FROM DEPT;
--EJ4
INSERT INTO EMP  
VALUES
((SELECT MAX(EMP_NO)+1 FROM EMP),'ROMERAL','EMPLEADO',7911,CURRENT_TIMESTAMP,80000,15,(SELECT DEPT_NO FROM DEPT WHERE DNOMBRE LIKE 'VENTAS')),
((SELECT MAX(EMP_NO)+2 FROM EMP),'ALONSO','EMPLEADO',7911,CURRENT_TIMESTAMP,80000,15,(SELECT DEPT_NO FROM DEPT WHERE DNOMBRE LIKE 'VENTAS'));
SELECT * FROM EMP;
--EJ5
UPDATE EMP SET COMISION = COMISION + (SALARIO * 0.10);
SELECT * FROM EMP;
--EJ6
UPDATE PLANTILLA SET SALARIO = SALARIO + 10000 
WHERE T LIKE 'N' AND FUNCION LIKE 'INTERINO';
SELECT * FROM PLANTILLA;
--EJ7
INSERT INTO DOCTOR VALUES((SELECT HOSPITAL_COD FROM HOSPITAL WHERE NOMBRE LIKE 'LA PAZ'),(SELECT MAX(DOCTOR_NO)+1 FROM DOCTOR),'HOUSE','DIAGNOSTICO',60000);
SELECT * FROM DOCTOR;
--EJ8
UPDATE EMP SET SALARIO = (SELECT MIN(SALARIO)+5000 FROM EMP WHERE OFICIO LIKE 'EMPLEADO')
WHERE DEPT_NO = (SELECT DEPT_NO FROM DEPT WHERE DNOMBRE LIKE 'VENTAS');
SELECT * FROM EMP;
--EJ9
UPDATE DOCTOR SET SALARIO = (SELECT SALARIO+20000 FROM PLANTILLA WHERE APELLIDO LIKE 'AMIGO R.')
WHERE ESPECIALIDAD LIKE 'PSIQUIATRÍA';
SELECT * FROM DOCTOR;
--EJ10
DELETE FROM EMP WHERE DEPT_NO = (SELECT DEPT_NO FROM DEPT WHERE DNOMBRE LIKE 'PRODUCCION');
SELECT * FROM EMP;
--EJ11
SELECT * INTO LISTAESPERA FROM ENFERMO WHERE S LIKE 'M';
SELECT * FROM LISTAESPERA;
DROP TABLE LISTAESPERA;
--EJ12
INSERT INTO LISTAESPERA SELECT * FROM ENFERMO WHERE FECHA_NAC < CAST('1960-01-01' AS DATE);
SELECT * FROM LISTAESPERA;
--EJ13
SELECT * INTO EMPLEADOS FROM EMP;
SELECT * FROM EMPLEADOS;
--EJ14
INSERT INTO EMPLEADOS VALUES ((SELECT MAX(EMP_NO)+1 FROM EMPLEADOS),'LOPEZ','EMPLEADO',7919,CURRENT_TIMESTAMP,10000,0,20),
((SELECT MAX(EMP_NO)+1 FROM EMPLEADOS),'RAMIREZ','EMPLEADO',7919,CURRENT_TIMESTAMP,10000,0,20);
SELECT * FROM EMPLEADOS;
--EJ15
DELETE FROM LISTAESPERA WHERE LISTAESPERA = 64823;
SELECT * FROM LISTAESPERA;
--EJ16
TRUNCATE TABLE LISTAESPERA;
SELECT * FROM LISTAESPERA;
--EJ17
DELETE FROM EMPLEADOS WHERE FECHA_ALT BETWEEN CAST('1980-01-01' AS DATE) 
AND CAST('1982-12-31' AS DATE);
SELECT * FROM EMPLEADOS;

--######################### FORMATO ##################################--
--EJ1
SELECT APELLIDO ,
CASE T
	WHEN 'M' THEN 'MAÑANA'
	WHEN 'T' THEN 'TARDE'
	ELSE 'NOCHE'
END AS TURNO
FROM PLANTILLA;
--EJ2
SELECT APELLIDO, 
CASE
	WHEN SALARIO > 500000 THEN 'COBRA MUCHO'
	WHEN SALARIO < 200000 THEN 'COBRA POCO'
ELSE 'NORMAL'
END AS EVALUACION
FROM EMP;

--############################ OBJETOS #########################--
--VISTA 1--
GO
CREATE VIEW [DATOS EMPLEADOS] AS
SELECT EMP_NO,APELLIDO,OFICIO,SALARIO FROM EMP;
GO
DROP VIEW  [DATOS EMPLEADOS];

--VISTA 2--
GO 
CREATE VIEW [DEPT EMP] AS
SELECT EMP.EMP_NO,EMP.APELLIDO,EMP.SALARIO,
EMP.OFICIO,EMP.DEPT_NO,DEPT.DNOMBRE,
DEPT.LOC FROM EMP 
INNER JOIN DEPT 
ON DEPT.DEPT_NO = EMP.DEPT_NO;
GO
DROP VIEW [DEPT EMP];

--################# TRANSACT SQL ##########################--

--MODIFICAR EL SALARIO DE LA PLANTILLA DE LA PAZ--
--SI LA SUMA SALARIAL ES MAYOR A 1.000.000 SUMA 5.000--
--SI LA SUMA SALARIAL ES MENOR RESTA 5.000--
GO
CREATE VIEW [PLANTILLA LA PAZ] AS
SELECT PLANTILLA.APELLIDO,PLANTILLA.SALARIO,HOSPITAL.NOMBRE FROM PLANTILLA 
INNER JOIN HOSPITAL 
ON HOSPITAL.HOSPITAL_COD = PLANTILLA.HOSPITAL_COD 
WHERE HOSPITAL.NOMBRE = 'LA PAZ';
GO
DECLARE @TOTAL INT;
SELECT @TOTAL = SUM(CAST(SALARIO AS INT)) FROM [PLANTILLA LA PAZ];
IF(@TOTAL > 1000000)
	BEGIN
		UPDATE [PLANTILLA LA PAZ] SET SALARIO = SALARIO + 5000;
	END
ELSE
	BEGIN
	    UPDATE [PLANTILLA LA PAZ] SET SALARIO = SALARIO - 5000;
	END  
SELECT APELLIDO,SALARIO FROM [PLANTILLA LA PAZ];

--SOLO SE GUARDA UN DATO--
DECLARE @APELLIDO NVARCHAR(30);
SELECT @APELLIDO = APELLIDO FROM EMP;
PRINT @APELLIDO;
--ALMACENAS MAS DE UN DATO--
DECLARE CONSULTA CURSOR FOR 
SELECT APELLIDO,OFICIO FROM EMP;
DECLARE @APE NVARCHAR(30);
DECLARE @OFI NVARCHAR(30);
OPEN CONSULTA
FETCH NEXT FROM CONSULTA INTO @APE,@OFI
WHILE(@@FETCH_STATUS = 0)
	BEGIN
		PRINT @APE + '-' + @OFI
		FETCH NEXT FROM CONSULTA INTO @APE,@OFI
	END
CLOSE CONSULTA
DEALLOCATE CONSULTA
--INCREMENTAR EL SALARIO DE LOS DOCTORES
--CADA DOCTOR TENDRA UN INCREMENTIO ALEATORIO HASTA 1000
--MOSTRAR APELLIDO,INCREMENTO.--
DECLARE DOCTORES CURSOR FOR
SELECT APELLIDO FROM DOCTOR;
DECLARE @APEDOC NVARCHAR(30);
DECLARE @SAL INT;
OPEN DOCTORES
FETCH NEXT FROM DOCTORES INTO @APEDOC
WHILE(@@FETCH_STATUS = 0)
	BEGIN
	 UPDATE DOCTOR SET SALARIO = CAST(SALARIO AS INT) + ROUND(RAND() * 1000,0) 
	 WHERE APELLIDO = @APEDOC;
	 FETCH NEXT FROM DOCTORES INTO @APEDOC
	END
CLOSE DOCTORES;
DEALLOCATE DOCTORES;
SELECT APELLIDO,SALARIO FROM DOCTOR;
--EJ1
DECLARE CONSULTA CURSOR FOR
SELECT DEPT_NO,SUM(CAST(SALARIO AS INT)) AS TOTAL FROM EMP
GROUP BY DEPT_NO;
DECLARE @DEPT INT
DECLARE @TOT INT
OPEN CONSULTA
FETCH NEXT FROM CONSULTA INTO @DEPT,@TOT;
WHILE(@@FETCH_STATUS = 0)
	BEGIN
		IF(@TOT > 1000000)
			BEGIN
				UPDATE EMP SET SALARIO = CAST(SALARIO AS INT) - 5000 WHERE DEPT_NO = @DEPT
			END
		ELSE
			BEGIN
			UPDATE EMP SET SALARIO = CAST(SALARIO AS INT) + 5000 WHERE DEPT_NO = @DEPT
			END
	FETCH NEXT FROM CONSULTA INTO @DEPT,@TOT;
	END
CLOSE CONSULTA;
DEALLOCATE CONSULTA;
SELECT * FROM EMP ORDER BY DEPT_NO;
--PROCEDIMIENTOS ALMACENADOS--
GO
CREATE PROCEDURE AUMENTOSUELDO(@EMPLEADO INT,@INCREMENTO INT)
AS
UPDATE EMP SET SALARIO  = CAST(SALARIO AS INT) + @INCREMENTO WHERE EMP_NO = @EMPLEADO;
GO
EXECUTE AUMENTOSUELDO 7782,20;
--EJEMPLO
GO
CREATE PROCEDURE INSERTAR_DOCTOR
(@NOMBRE NVARCHAR(30),@DOCTORNO INT,@APELLIDO NVARCHAR(30),
@ESPECIALIDAD NVARCHAR(30),@SALARIO INT)
AS
DECLARE @HOSPITALCOD INT 
SELECT @HOSPITALCOD = HOSPITAL_COD FROM HOSPITAL
WHERE UPPER(NOMBRE) LIKE UPPER(@NOMBRE)
IF(@HOSPITALCOD NOT LIKE 'NULL')
	BEGIN
		INSERT INTO DOCTOR VALUES(@HOSPITALCOD,@DOCTORNO,@APELLIDO,@ESPECIALIDAD,@SALARIO)
	END
ELSE
	BEGIN
		PRINT 'NO EXISTE EL HOSPITAL ' + @NOMBRE
	END
GO
EXECUTE INSERTAR_DOCTOR 'PAL',200,'PELA','PSIQUIATRIA',20000000
DROP PROCEDURE INSERTAR_DOCTOR;

--EJ1
GO
CREATE PROCEDURE DATOS_HOSPITAL(@HOSPITAL NVARCHAR(30))
AS
	DECLARE @COD INT
	SELECT @COD = HOSPITAL_COD FROM HOSPITAL 
	WHERE UPPER(NOMBRE) LIKE UPPER(@HOSPITAL)
	IF(@COD NOT LIKE 'NULL')
		BEGIN
			SELECT AVG(CAST(SALARIO AS INT)) AS SALARIO_MEDIO,
			SUM(CAST(SALARIO AS INT)) AS SUMA_SALARIO,
			COUNT(EMPLEADO_NO) AS NUMERO_EMPLEADOS FROM PLANTILLA
			WHERE HOSPITAL_COD = @COD
			GROUP BY HOSPITAL_COD
			SELECT * FROM PLANTILLA WHERE HOSPITAL_COD = @COD
		END
    ELSE
		BEGIN
			PRINT 'NO EXISTE ESE HOSPITAL'
		END
GO
EXECUTE DATOS_HOSPITAL 'LA PAZ';
DROP PROCEDURE DATOS_HOSPITAL;
--EJ2
GO
CREATE PROCEDURE BUSCAR_EMPLEADOS(@APELLIDO NVARCHAR(30))
AS
	SELECT * FROM EMP WHERE APELLIDO LIKE '%' + @APELLIDO + '%'
GO
EXECUTE BUSCAR_EMPLEADOS 'L';
DROP PROCEDURE BUSCAR_EMPLEADOS;
--EJ3
GO
CREATE PROCEDURE BORRAR_EMPLEADO(@APELLIDO NVARCHAR(30))
AS
	DECLARE @EXISTS INT
	SELECT @EXISTS = COUNT(EMP_NO) FROM EMP
	WHERE APELLIDO LIKE @APELLIDO
	IF(@EXISTS NOT LIKE 0)
		BEGIN
			IF(@EXISTS = 1)
				BEGIN
					DELETE FROM EMP WHERE APELLIDO LIKE @APELLIDO
					PRINT 'SE HA ELIMINADO AL EMPLEADO ' + @APELLIDO
				END
			ELSE
				BEGIN
					PRINT 'HAY MAS DE UN EMPLEADO CON EL MISMO APELLIDO'
				END
		END
	ELSE
		BEGIN
			PRINT 'EL EMPLEADO NO EXISTE'
		END	 
GO
EXECUTE BORRAR_EMPLEADO 'TORMO';
DROP PROCEDURE BORRAR_EMPLEADO;
--EJ4
GO
CREATE PROCEDURE CAMBIAR_ESPECIALIDAD(@APELLIDO NVARCHAR(30),@ESPECIALIDAD NVARCHAR(30))
AS
	DECLARE @EXISTS INT
	SELECT @EXISTS = COUNT(DOCTOR_NO) FROM DOCTOR
	WHERE UPPER(APELLIDO) LIKE UPPER(@APELLIDO)
	IF(@EXISTS NOT LIKE 0)
		BEGIN
			IF(@EXISTS = 1)
				BEGIN
					UPDATE DOCTOR SET ESPECIALIDAD = @ESPECIALIDAD
					WHERE UPPER(APELLIDO) LIKE UPPER(@APELLIDO)
					PRINT 'SE HA MODIFICADO AL DOCTOR ' + @APELLIDO + '.'
					PRINT 'AHORA TIENE UNA ESPECIALIDAD EN ' + @ESPECIALIDAD +'.'
				END
			ELSE
				BEGIN
					PRINT 'HAY MAS DE UN DOCTOR CON EL MISMO APELLIDO'
				END
		END
	ELSE
		BEGIN
			PRINT 'EL DOCTOR NO EXISTE'
		END
GO
EXECUTE CAMBIAR_ESPECIALIDAD 'ADAMS C.','PODOLOGIA';
--EJ5
GO
CREATE PROCEDURE MODIFICAR_DEPT(@DEPTNO INT,@NEWNOMBRE NVARCHAR(30))
AS
	DECLARE @EXISTS INT
	SELECT @EXISTS = COUNT(DEPT_NO) FROM DEPT
	WHERE DEPT_NO = DEPT_NO
	IF(@EXISTS NOT LIKE 0)
		BEGIN
			UPDATE DEPT SET DNOMBRE = @NEWNOMBRE
			WHERE DEPT_NO = @DEPTNO
			PRINT 'SE HA MODIFICADO EL DEPARTAMENTO'
		END
	ELSE
		BEGIN
			PRINT 'EL DEPARTAMENTO NO EXISTE'
		END
GO
EXECUTE MODIFICAR_DEPT 20,'SASTRERÍA';
SELECT * FROM DEPT;
--EJ6
GO
CREATE PROCEDURE INCREMENTAR_SALARIO(@APELLIDO NVARCHAR(30),@AUMENTO INT)
AS
	DECLARE @EXISTS INT
	DECLARE @SALARIO INT
	DECLARE @MAXSALARIO INT;
	SELECT @EXISTS = COUNT(EMP_NO),@SALARIO = SALARIO FROM EMP
	WHERE APELLIDO LIKE @APELLIDO
	IF(@EXISTS NOT LIKE 0)
		BEGIN
			IF(@EXISTS = 1)
				BEGIN
					SELECT @MAXSALARIO = MAX(CAST(SALARIO AS INT)) FROM EMP
					WHERE DEPT_NO = 
					(SELECT DEPT_NO FROM EMP WHERE UPPER(APELLIDO) LIKE UPPER(@APELLIDO))
					GROUP BY DEPT_NO
					IF(  (@SALARIO + @AUMENTO) < @MAXSALARIO)
						BEGIN
							UPDATE EMP SET SALARIO = (@SALARIO + @AUMENTO) 
							WHERE UPPER(APELLIDO) LIKE UPPER(@APELLIDO)
							PRINT 'SE HA MODIFICADO EL SALARIO AL EMPLEADO ' + @APELLIDO
						END
					ELSE
						BEGIN
							PRINT 'NO ES POSIBLE AUMENTAR EL SALARIO' 
						END
				END
			ELSE
				BEGIN
					PRINT 'HAY MAS DE UN EMPLEADO CON EL MISMO APELLIDO'
				END
		END
	ELSE
		BEGIN
			PRINT 'EL EMPLEADO NO EXISTE'
		END	 
GO
EXECUTE INCREMENTAR_SALARIO 'PELAYO',30000;
DROP PROCEDURE INCREMENTAR_SALARIO
--EJ7EJ10
GO
CREATE PROCEDURE MOSTRAR_SUB_EMPLEADO(@APELLIDO NVARCHAR(30))
AS
	DECLARE @EXISTS INT
	SELECT @EXISTS = COUNT(EMP_NO) FROM EMP
	WHERE APELLIDO LIKE @APELLIDO
	IF(@EXISTS NOT LIKE 0)
		BEGIN
			IF(@EXISTS = 1)
				BEGIN
					SELECT * FROM EMP 
					WHERE DIR = (SELECT EMP_NO FROM EMP WHERE APELLIDO = @APELLIDO)
				END
			ELSE
				BEGIN
					PRINT 'HAY MAS DE UN EMPLEADO CON EL MISMO APELLIDO'
				END
		END
	ELSE
		BEGIN
			PRINT 'EL EMPLEADO NO EXISTE'
		END	 
GO
EXECUTE MOSTRAR_SUB_EMPLEADO 'ARROYO';
SELECT * FROM EMP
--EJ8EJ9
GO
CREATE PROCEDURE MOSTRAR_INFO_TEXTO_EMPLEADO
AS
	DECLARE @APELLIDO NVARCHAR(30)
	DECLARE @OFICIO NVARCHAR(30)
	DECLARE @FECHA DATE
	DECLARE EMPLEADOS CURSOR FOR
	SELECT APELLIDO,OFICIO,FECHA_ALT FROM EMP
	OPEN EMPLEADOS
	FETCH NEXT FROM EMPLEADOS INTO @APELLIDO,@OFICIO,@FECHA
	WHILE(@@FETCH_STATUS = 0)
		BEGIN
			IF(@APELLIDO NOT LIKE 'NULL')
				BEGIN
					PRINT 'EL SEÑOR ' + @APELLIDO + ' DE OFICIO ' +
					@OFICIO + ', SE DIÓ DE ALTA EL DÍA ' + CAST(DAY(@FECHA) AS NVARCHAR) + ' ' +  DATENAME(MONTH,@FECHA) + ' DEL ' + CAST(YEAR(@FECHA) AS NVARCHAR) +
					' ,Y LLEVA EN LA EMPRESA ' + CAST(YEAR(CURRENT_TIMESTAMP) - YEAR(@FECHA) AS NVARCHAR) + ' AÑOS.'
				END
			ELSE
				BEGIN
					PRINT 'EMPLEADO SIN NOMBRE.'
				END
			FETCH NEXT FROM EMPLEADOS INTO @APELLIDO,@OFICIO,@FECHA
		END
	CLOSE EMPLEADOS
	DEALLOCATE EMPLEADOS
GO
EXECUTE MOSTRAR_INFO_TEXTO_EMPLEADO
DROP PROCEDURE MOSTRAR_INFO_TEXTO_EMPLEADO
--EJ12
GO
CREATE PROCEDURE CALCULAR_VACACIONES(@APELLIDO NVARCHAR(30))
AS 
	DECLARE @EXISTS INT
	DECLARE @AÑOS INT
	DECLARE @OFICIO NVARCHAR(30)
	DECLARE @DIAS INT
	SELECT @EXISTS = COUNT(EMP_NO)
	FROM EMP
	WHERE APELLIDO LIKE @APELLIDO
	SELECT  @AÑOS = (DATEPART(YEAR,CURRENT_TIMESTAMP) - DATEPART(YEAR,FECHA_ALT))
	FROM EMP
	WHERE APELLIDO LIKE @APELLIDO
	SELECT  @OFICIO = OFICIO 
	FROM EMP
	WHERE APELLIDO LIKE @APELLIDO
	IF(@EXISTS NOT LIKE 0)
		BEGIN
			IF(@EXISTS = 1)
				BEGIN
					IF(@OFICIO = 'PRESIDENTE')
						BEGIN
							SET @DIAS = 40
						END
					ELSE IF(@OFICIO = 'EMPLEADO')
						BEGIN
							SET @DIAS = 15
						END
					ELSE IF(@OFICIO = 'ANALISTA')
						BEGIN
							SET @DIAS = 22
						END
					ELSE 
						BEGIN
							SET @DIAS = 25
						END
					PRINT 'EL ' + @OFICIO + ' ' + @APELLIDO + ' TIENE ' + CAST(@DIAS AS NVARCHAR(30)) + ' DIAS DE VACACIONES,
					LLEVA EN LA EMPRESA ' + CAST(@AÑOS AS NVARCHAR(30)) + ' AÑOS, CON UN TOTAL DE ' +
					CAST((@DIAS * @AÑOS) AS NVARCHAR(30)) + ' DIAS DE VACACIONES.';
 				END
			ELSE
				BEGIN
					PRINT 'HAY MAS DE UN EMPLEADO CON EL MISMO APELLIDO'
				END
		END
	ELSE
		BEGIN
			PRINT 'EL EMPLEADO NO EXISTE'
		END	 
GO
EXECUTE CALCULAR_VACACIONES 'REY';
DROP PROCEDURE CALCULAR_VACACIONES

----

GO
CREATE PROCEDURE MOSTRARENFERMOS
AS
	SELECT * FROM ENFERMO
GO
GO
CREATE PROCEDURE BORRARENFERMO(@INSCRIPCION INT)
AS
	DELETE FROM ENFERMO WHERE INSCRIPCION = @INSCRIPCION
GO 

GO 

CREATE PROCEDURE SHOWDEPT(@DN NVARCHAR(30))
AS
	SELECT * FROM DEPT
	WHERE DNOMBRE LIKE '%'+@DN+'%' 
	ORDER BY DEPT_NO ASC
GO

EXEC SHOWDEPT 'AS'
DROP PROCEDURE SHOWDEPT;
GO
CREATE PROCEDURE SHOWDATADEPT(@DN INT)
AS
	SELECT * FROM DEPT
	WHERE DEPT_NO = @DN
GO
EXEC SHOWDATADEPT 10
DROP PROCEDURE SHOWDATADEPT;

GO
ALTER PROCEDURE INSERTDEPT(@N INT, @DN NVARCHAR(50), @LOC NVARCHAR(50))
AS
	DECLARE @OCUR INT
	SELECT @OCUR = COUNT(DEPT_NO) FROM DEPT WHERE DEPT_NO = @N
	IF(@OCUR = 0)
		BEGIN
			INSERT INTO DEPT VALUES(@N,@DN,@LOC);
		END
	ELSE
		BEGIN
			PRINT 'EL número de departamento ya existe.'
		END
GO

GO
CREATE PROCEDURE DELDEPT(@N INT)
AS
	DELETE FROM DEPT WHERE DEPT_NO = @N;
GO

GO
CREATE PROCEDURE UPDATEDEPT(@OLD INT,@N INT, @DN NVARCHAR(50), @LOC NVARCHAR(50))
AS
	UPDATE DEPT SET DEPT_NO = @N, DNOMBRE = @DN, LOC = @LOC 
	WHERE DEPT_NO = @OLD;
GO


--######################################## TRIGGER #################################################

ALTER TRIGGER T_PRUEBA
ON DEPT
INSTEAD OF INSERT
AS
	DECLARE @LOC NVARCHAR(50)
	SELECT @LOC = LOC FROM inserted
	DECLARE @NUMERO INT 
	SELECT @NUMERO = COUNT(DEPT_NO) FROM DEPT
	WHERE LOC = @LOC;
	IF(@NUMERO = 0)
		BEGIN
			INSERT INTO DEPT 
			SELECT * FROM inserted
		END
	ELSE
		BEGIN
			PRINT 'YA EXISTE ESTA LOCALIDAD'
		END
GO
INSERT INTO DEPT VALUES(33,'CONSTRUCTOR','MAMALEI');
SELECT * FROM DEPT;

GO
CREATE VIEW VISTA_DOCTOTES
AS 
	SELECT DOCTOR.DOCTOR_NO,DOCTOR.APELLIDO,
	DOCTOR.ESPECIALIDAD,DOCTOR.SALARIO,
	HOSPITAL.NOMBRE FROM HOSPITAL
	INNER JOIN DOCTOR
	ON HOSPITAL.HOSPITAL_COD = DOCTOR.HOSPITAL_COD
GO

GO
CREATE TRIGGER INSERT_DOCTOR
ON VISTA_DOCTOTES
INSTEAD OF INSERT
AS
	DECLARE @NH NVARCHAR(50)
	SELECT @NH = NOMBRE FROM inserted
	DECLARE @CODH INT
	SELECT @CODH = HOSPITAL_COD FROM HOSPITAL
	WHERE NOMBRE = @NH
	IF(@CODH IS NULL)
		BEGIN
			PRINT 'ESE HOSPITAL NO EXISTE'
		END
	ELSE
		BEGIN
			INSERT INTO DOCTOR
			SELECT @CODH,DOCTOR_NO,APELLIDO,ESPECIALIDAD,SALARIO FROM inserted
		END
GO

-----
CREATE VIEW TRABAJADORES
AS
	SELECT HOSPITAL_COD,EMPLEADO_NO AS ID,APELLIDO,FUNCION AS TRABAJO,SALARIO FROM PLANTILLA
	UNION
	SELECT HOSPITAL_COD,DOCTOR_NO AS ID,APELLIDO,ESPECIALIDAD AS TRABAJO,SALARIO FROM DOCTOR
GO

CREATE PROCEDURE TRABAJADOR_HOSPITAL(@COD INT)
AS
	SELECT * FROM TRABAJADORES
	WHERE HOSPITAL_COD = @COD
GO

CREATE PROCEDURE MOSTRAR_DATOS_TRABAJADOR(@ID INT)
AS
	SELECT SALARIO,TRABAJO FROM TRABAJADORES
	WHERE ID = @ID
GO

CREATE TRIGGER VALIDAR_EMPLEADO
ON TRABAJADORES
INSTEAD OF UPDATE
AS
	DECLARE @N INT
	DECLARE @ID INT
	DECLARE @SAL INT
	DECLARE @JOB NVARCHAR(50)
	SELECT @ID = ID,@SAL = SALARIO,@JOB = TRABAJO FROM inserted
	SELECT @N = COUNT(DOCTOR_NO) FROM DOCTOR
	WHERE DOCTOR_NO = @ID
	IF(@N = 1)
		BEGIN
			UPDATE DOCTOR SET SALARIO = @SAL,ESPECIALIDAD = @JOB
			WHERE DOCTOR_NO = @ID
		END
	ELSE
		BEGIN
			UPDATE PLANTILLA SET SALARIO = @SAL,FUNCION = @JOB
			WHERE EMPLEADO_NO = @ID
		END
	
GO

ALTER PROCEDURE ACTUALIZAR_EMPLEADO(@ID INT,@SAL INT,@JOB NVARCHAR(50))
AS
	UPDATE TRABAJADORES SET SALARIO = @SAL,TRABAJO = @JOB
	WHERE ID = @ID
GO

ALTER PROCEDURE MOSTRAR_DATOS_HOSPITAL(@COD INT)
AS
	SELECT COUNT(HOSPITAL_COD) AS PERSONAS,SUM(SALARIO) AS SUMA , AVG(SALARIO) AS MEDIA FROM TRABAJADORES
	WHERE HOSPITAL_COD = @COD
	GROUP BY HOSPITAL_COD
GO

SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES
SELECT COLUMN_NAME FROM INFORMATION_SCHEMA.COLUMNS
WHERE table_name = 'HOSPITAL'

select * from PLANTILLA LA PAZ